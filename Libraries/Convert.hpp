/*******************************************************************************
*
* Copyright (c) 2016
* Lumi, JSC.
* All Rights Reserved
*
*
* Description:      Include file for application
*
* Author:
*
* Last Changed By:  TrungTQ
* Revision:         Revision: 1.0
* Last Changed:     Date: 2016-08-05 10:15:00 (Fri, 04 Aug 2016)
*
* Note:             This file base on lib of ivanseidel
*                   URL: https://github.com/ivanseidel/LinkedList
*
******************************************************************************/
#ifndef CONVERT_HPP_
#define CONVERT_HPP_

/******************************************************************************/
/*                              INCLUDE FILES                                 */
/******************************************************************************/

/******************************************************************************/
/*                     EXPORTED TYPES and DEFINITIONS                         */
/******************************************************************************/

/******************************************************************************/
/*                              PRIVATE DATA                                  */
/******************************************************************************/

/******************************************************************************/
/*                              EXPORTED DATA                                 */
/******************************************************************************/

/******************************************************************************/
/*                            PRIVATE FUNCTIONS                               */
/******************************************************************************/

/******************************************************************************/
/*                            EXPORTED FUNCTIONS                              */
/******************************************************************************/
/**
 * @func   ptr
 * @brief  turn reference into pointer
 * @param  None
 * @retval None
 */
template<typename T>
inline T* ptr(T & obj) {
    return &obj;
}

/**
 * @func   ptr
 * @brief  obj is already pointer, return it
 * @param  None
 * @retval None
 */
template<typename T>
inline T* ptr(T * obj) {
    return obj;
}
/******************************************************************************/
/*                             EXPORTED METHODS                               */
/******************************************************************************/


#endif /* CONVERT_HPP_ */
